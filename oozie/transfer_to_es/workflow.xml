<?xml version="1.0" encoding="UTF-8"?>
<workflow-app xmlns="uri:oozie:workflow:0.4"
        name="discovery-transfer_to_es-hive:${popularity_score_table}->esbulk:${current_esbulk_partition}->swift-wf">

    <parameters>
        <property>
            <name>oozie.action.sharelib.for.spark</name>
            <value>spark2.3.1</value>
        </property>

        <!-- Default values for inner oozie settings -->
        <property>
            <name>oozie_launcher_queue_name</name>
            <value>${queue_name}</value>
        </property>
        <property>
            <name>oozie_launcher_memory</name>
            <value>256</value>
        </property>

        <!-- Required properties -->
        <property><name>queue_name</name></property>
        <property><name>name_node</name></property>
        <property><name>job_tracker</name></property>
    </parameters>

    <start to="convert_to_esbulk"/>

    <action name="convert_to_esbulk">
        <spark xmlns="uri:oozie:spark-action:0.1">
            <job-tracker>${job_tracker}</job-tracker>
            <name-node>${name_node}</name-node>
            <configuration>
                <property>
                    <name>mapreduce.job.queuename</name>
                    <value>${queue_name}</value>
                </property>
                <property>
                    <name>oozie.launcher.mapred.job.queue.name</name>
                    <value>${oozie_launcher_queue_name}</value>
                </property>
                <property>
                    <name>oozie.launcher.mapreduce.map.memory.mb</name>
                    <value>${oozie_launcher_memory}</value>
                </property>
                <property>
                    <name>oozie.launcher.mapreduce.map.env</name>
                    <value>SPARK_HOME=/usr/lib/spark2</value>
                </property>
            </configuration>
            <master>yarn-cluster</master>
            <mode>cluster</mode>
            <name>Discovery popularity_score to esbulk</name>
            <jar>${pyspark_convert_to_esbulk_script}</jar>
            <spark-opts>
                --conf spark.pyspark.python=python3
                --driver-memory ${spark_driver_memory}
                --executor-memory ${spark_executor_memory}
                --conf spark.dynamicAllocation.maxExecutors=${spark_number_executors}
                --queue ${queue_name}
            </spark-opts>
            <!-- arguments for pyspark script -->
            <arg>--source</arg>
            <arg>${popularity_score_partition_directory}</arg>
            <arg>--output</arg>
            <arg>${popularity_score_esbulk_partition_directory}</arg>
            <arg>--field-name</arg>
            <arg>popularity_score</arg>
        </spark>

        <ok to="swift_upload"/>
        <error to="send_error_email"/>
    </action>

    <action name="swift_upload">
        <sub-workflow>
            <app-path>${swift_upload_workflow_file}</app-path>
            <propagate-configuration/>
            <configuration>
                <property>
                    <name>source_directory</name>
                    <value>${popularity_score_esbulk_partition_directory}</value>
                </property>
                <property>
                    <name>swift_container</name>
                    <value>search_popularity_score</value>
                </property>
                <property>
                    <name>swift_object_prefix</name>
                    <value>${current_esbulk_partition}</value>
                </property>
                <property>
                    <!-- Must be true to allow re-runs of workflow -->
                    <name>should_overwrite</name>
                    <value>true</value>
                </property>
            </configuration>
        </sub-workflow>
        <ok to="end"/>
        <error to="send_error_email"/>
    </action>

    <action name="send_error_email">
        <sub-workflow>
            <app-path>${send_error_email_workflow_file}</app-path>
            <propagate-configuration/>
            <configuration>
                <property>
                    <name>parent_name</name>
                    <value>${wf:name()}</value>
                </property>
                <property>
                    <name>parent_failed_action</name>
                    <value>${wf:lastErrorNode()}</value>
                </property>
                <property>
                    <name>to</name>
                    <value>discovery-alerts@lists.wikimedia.org</value>
                </property>
            </configuration>
        </sub-workflow>
        <ok to="kill"/>
        <error to="kill"/>
    </action>

    <kill name="kill">
        <message>Action failed, error message[${wf:errorMessage(wf:lastErrorNode())}]</message>
    </kill>
    <end name="end"/>
</workflow-app>

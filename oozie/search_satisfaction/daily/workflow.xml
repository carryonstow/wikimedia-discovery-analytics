<?xml version="1.0" encoding="UTF-8"?>
<workflow-app xmlns="uri:oozie:workflow:0.4"
    name="discovery-search_satisfaction_daily-${year},${month},${day}-wf">

    <parameters>
        <property>
            <name>oozie.action.sharelib.for.spark</name>
            <value>spark-2.4.4</value>
        </property>

        <!-- Default values for inner oozie settings -->
        <property>
            <name>oozie_launcher_queue_name</name>
            <value>${queue_name}</value>
        </property>
        <property>
            <name>oozie_launcher_memory</name>
            <value>256</value>
        </property>
    </parameters>

    <credentials>
        <credential name="hcat-cred" type="hcat">
            <property>
                <name>hcat.metastore.principal</name>
                <value>${hcat_metastore_principal}</value>
            </property>
            <property>
               <name>hcat.metastore.uri</name>
               <value>${hcat_metastore_uri}</value>
            </property>
        </credential>
    </credentials>

    <start to="aggregate"/>

    <action name="aggregate" cred="hcat-cred">
        <spark xmlns="uri:oozie:spark-action:0.1">
            <job-tracker>${job_tracker}</job-tracker>
            <name-node>${name_node}</name-node>
            <configuration>
                <property>
                    <name>mapreduce.job.queuename</name>
                    <value>${queue_name}</value>
                </property>
                <property>
                    <name>oozie.launcher.mapred.job.queue.name</name>
                    <value>${oozie_launcher_queue_name}</value>
                </property>
                <property>
                    <name>oozie.launcher.mapreduce.map.memory.mb</name>
                    <value>${oozie_launcher_memory}</value>
                </property>
                <property>
                    <name>oozie.launcher.mapreduce.map.env</name>
                    <value>SPARK_HOME=/usr/lib/spark2</value>
                </property>
            </configuration>
            <master>yarn</master>
            <mode>cluster</mode>
            <name>Discovery Generate Daily Search Satisfaction</name>
            <jar>${discovery_oozie_directory}/search_satisfaction/daily/generate_daily_search_satisfaction.py</jar>
            <spark-opts>
                --conf spark.pyspark.python=/usr/bin/python3
                --conf spark.sql.shuffle.partitions=20
                --queue ${queue_name}
            </spark-opts>
            <!-- arguments for pyspark script -->
            <arg>--cirrus-table</arg><arg>${cirrus_request_event_table}</arg>
            <arg>--satisfaction-table</arg><arg>${search_satisfaction_event_table}</arg>
            <arg>--output-table</arg><arg>${search_satisfaction_daily_table}</arg>
            <arg>--year</arg><arg>${year}</arg>
            <arg>--month</arg><arg>${month}</arg>
            <arg>--day</arg><arg>${day}</arg>
        </spark>

        <ok to="mark_search_satisfaction_daily_dataset_done"/>
        <error to="send_error_email"/>
    </action>

    <action name="mark_search_satisfaction_daily_dataset_done">
        <sub-workflow>
            <app-path>${mark_directory_done_workflow_file}</app-path>
            <configuration>
                <property>
                    <name>directory</name>
                    <value>${search_satisfaction_daily_dataset_directory}</value>
                </property>
            </configuration>
        </sub-workflow>
        <ok to="end"/>
        <error to="send_error_email"/>
    </action>

    <action name="send_error_email">
        <sub-workflow>
            <app-path>${send_error_email_workflow_file}</app-path>
            <propagate-configuration/>
            <configuration>
                <property>
                    <name>parent_name</name>
                    <value>${wf:name()}</value>
                </property>
                <property>
                    <name>parent_failed_action</name>
                    <value>${wf:lastErrorNode()}</value>
                </property>
                <property>
                    <name>to</name>
                    <value>${send_error_email_address}</value>
                </property>
            </configuration>
        </sub-workflow>
        <ok to="kill"/>
        <error to="kill"/>
    </action>

    <kill name="kill">
        <message>Action failed, error message[${wf:errorMessage(wf:lastErrorNode())}]</message>
    </kill>
    <end name="end"/>
</workflow-app>

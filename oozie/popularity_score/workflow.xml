<?xml version="1.0" encoding="UTF-8"?>
<workflow-app xmlns="uri:oozie:workflow:0.4"
    name="discovery-popularity-score-${pageview_hourly_table}->${popularity_score_table}-${year},${month},${day}-wf">

    <parameters>

        <!-- Default values for inner oozie settings -->
        <property>
            <name>oozie_launcher_queue_name</name>
            <value>${queue_name}</value>
        </property>
        <property>
            <name>oozie_launcher_memory</name>
            <value>256</value>
        </property>

        <!-- Required properties -->
        <property><name>queue_name</name></property>
        <property><name>name_node</name></property>
        <property><name>job_tracker</name></property>

        <property>
            <name>hive_site_xml</name>
            <description>hive-site.xml file path in HDFS</description>
        </property>
        <property>
            <name>hive_lib_path></name>
            <description>Local path to hive jars on executor instances</description>
        </property>

        <property>
            <name>spark_assembly_jar</name>
            <description>HDFS path to spark-assembly.jar</description>
        </property>
        <property>
            <name>spark_number_executors</name>
            <description>Number of executors to run job with</description>>
        </property>
        <property>
            <name>spark_executor_memory</name>
            <description>Amount of memory to reserve on executor instances</description>
        </property>
        <property>
            <name>spark_driver_memory</name>
            <description>Amount of memory to reserve on driver instance</description>
        </property>

        <property>
            <name>pageview_hourly_table</name>
            <description>Fully qualified name of the pageview_hourly table in hive</description>
        </property>
        <property>
            <name>pageview_hourly_data_directory</name>
            <description>Directory which contains the data for hive wmf.pageview_hourly table</description>
        </property>
        <property>
            <name>popularity_score_table</name>
            <description>Fully qualified name of the popularity_score table in hive</description>
        </property>
        <property>
            <name>popularity_score_data_directory</name>
            <description>The popularity_score directory path in HDFS</description>
        </property>
        <property>
            <name>popularity_score_partition_directory</name>
            <value>${popularity_score_data_directory}/agg_days=${days_aggregated}/year=${year}/month=${month}/day=${day}</value>
        </property>

        <property>
            <name>days_aggregated</name>
            <description>Number of days to aggregate page views over</description>
        </property>

        <property>
            <name>start_date</name>
            <description>The inclusive date to start aggregation on in YYYY/MM/DD format</description>
        </property>
        <property>
            <name>year</name>
            <description>Exlusive four digit year portion of date to end aggregation on</description>
        </property>
        <property>
            <name>month</name>
            <description>Exclusive unpadded month portion of date to end aggregation on</description>
        </property>
        <property>
            <name>day</name>
            <description>Exclusive unpadded day portion of date to end aggregation on</description>
        </property>

        <property>
            <name>add_partition_workflow_file</name>
            <description>Workflow for adding a partition to hive</description>
        </property>
        <property>
            <name>mark_directory_done_workflow_file</name>
            <description>Workflow for marking a directory as complete</description>
        </property>
        <property>
            <name>send_error_email_workflow_file</name>
            <description>Workflow for sending an email</description>
        </property>

        <property>
            <name>discovery_oozie_directory</name>
            <description>The path to this repositories oozie directory in HDFS</description>
        </property>

        <property>
            <name>pyspark_popularity_score_script</name>
            <!-- This is relative to the containing directory of this file. -->
            <value>${discovery_oozie_directory}/popularity_score/popularityScore.py</value>
            <description>Path to Pyspark script to run for generating the popularity score in HDFS.</description>
        </property>
    </parameters>

    <start to="aggregate"/>

    <action name="aggregate">
        <spark xmlns="uri:oozie:spark-action:0.1">
            <job-tracker>${job_tracker}</job-tracker>
            <name-node>${name_node}</name-node>
            <configuration>
                <property>
                    <name>mapreduce.job.queuename</name>
                    <value>${queue_name}</value>
                </property>
                <property>
                    <name>oozie.launcher.mapred.job.queue.name</name>
                    <value>${oozie_launcher_queue_name}</value>
                </property>
                <property>
                    <name>oozie.launcher.mapreduce.map.memory.mb</name>
                    <value>${oozie_launcher_memory}</value>
                </property>
            </configuration>
            <master>yarn-cluster</master>
            <mode>cluster</mode>
            <name>Discovery Popularity Score</name>
            <jar>${pyspark_popularity_score_script}</jar>
            <spark-opts>--conf spark.yarn.jar=${spark_assembly_jar} --executor-memory ${spark_executor_memory} --driver-memory ${spark_driver_memory} --num-executors ${spark_number_executors} --queue ${queue_name} --conf spark.yarn.appMasterEnv.SPARK_HOME=/bogus --driver-class-path ${hive_lib_path} --driver-java-options "-Dspark.executor.extraClassPath=${hive_lib_path}" --files ${hive_site_xml}</spark-opts>
            <!-- arguments for pyspark script -->
            <arg>--source-dir</arg>
            <arg>${pageview_hourly_data_directory}</arg>
            <arg>--output-dir</arg>
            <arg>${popularity_score_partition_directory}</arg>
            <arg>${start_date}</arg>
            <arg>${year}/${month}/${day}</arg>
        </spark>

        <ok to="add_hive_partition"/>
        <error to="kill"/>
    </action>

    <action name="add_hive_partition">
        <sub-workflow>
            <app-path>${add_partition_workflow_file}</app-path>
            <propagate-configuration/>
            <configuration>
                <property>
                    <name>table</name>
                    <value>${popularity_score_table}</value>
                </property>
                <property>
                    <name>partition_spec</name>
                    <value>agg_days=${days_aggregated},year=${year},month=${month},day=${day}</value>
                </property>
                <property>
                    <name>location</name>
                    <value>${popularity_score_partition_directory}</value>
                </property>
            </configuration>
        </sub-workflow>
        <ok to="mark_popularity_score_dataset_done"/>
        <error to="kill"/>
    </action>

    <action name="mark_popularity_score_dataset_done">
        <sub-workflow>
            <app-path>${mark_directory_done_workflow_file}</app-path>
            <configuration>
                <property>
                    <name>directory</name>
                    <value>${popularity_score_partition_directory}</value>
                </property>
            </configuration>
        </sub-workflow>
        <ok to="end"/>
        <error to="kill"/>
    </action>

    <action name="send_error_email">
        <sub-workflow>
            <app-path>${send_error_email_workflow_file}</app-path>
            <propagate-configuration/>
            <configuration>
                <property>
                    <name>parent_name</name>
                    <value>${wf:name()}</value>
                </property>
            </configuration>
        </sub-workflow>
        <ok to="kill"/>
        <error to="kill"/>
    </action>

    <kill name="kill">
        <message>Action failed, error message[${wf:errorMessage(wf:lastErrorNode())}]</message>
    </kill>
    <end name="end"/>
</workflow-app>
